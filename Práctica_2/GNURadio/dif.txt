import numpy as np
from gnuradio import gr

class blk(gr.sync_block):
    def __init__(self, Ts=1.0):  # Ts opcional para derivada por tiempo
        gr.sync_block.__init__(
            self,
            name='e_Diff',            # Nombre que verás en GRC
            in_sig=[np.float32],
            out_sig=[np.float32],
        )
        self.prev = 0.0              # último valor de entrada del llamado anterior
        self.Ts = float(Ts)

    def work(self, input_items, output_items):
        x = input_items[0]
        y = output_items[0]

        n = len(x)
        if n == 0:
            return 0

        # diferencia discreta con memoria:
        # y[0] = x[0] - prev; y[k] = x[k] - x[k-1] para k>=1
        y[0] = (x[0] - self.prev) / self.Ts
        if n > 1:
            y[1:] = (x[1:] - x[:-1]) / self.Ts

        # actualizar estado
        self.prev = x[-1]

        return len(y)
